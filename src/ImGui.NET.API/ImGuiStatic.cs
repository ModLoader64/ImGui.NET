//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using ImGuiNET;
using System;
using System.Numerics;
using System.Runtime.CompilerServices;

namespace ModLoader.API {
    
    public static class ImGui {
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void AlignTextToFramePadding() {
            ImGuiInstanceContainer.singleton.AlignTextToFramePadding();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ArrowButton(String str_id, ImGuiDir dir) {
            return ImGuiInstanceContainer.singleton.ArrowButton(str_id,dir);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Begin(String name) {
            return ImGuiInstanceContainer.singleton.Begin(name);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Begin(String name, ref Boolean p_open) {
            return ImGuiInstanceContainer.singleton.Begin(name,ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Begin(String name, ref Boolean p_open, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.Begin(name,ref p_open,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginChild(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(String str_id, Vector2 size) {
            return ImGuiInstanceContainer.singleton.BeginChild(str_id,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(String str_id, Vector2 size, Boolean border) {
            return ImGuiInstanceContainer.singleton.BeginChild(str_id,size,border);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(String str_id, Vector2 size, Boolean border, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginChild(str_id,size,border,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(UInt32 id) {
            return ImGuiInstanceContainer.singleton.BeginChild(id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(UInt32 id, Vector2 size) {
            return ImGuiInstanceContainer.singleton.BeginChild(id,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(UInt32 id, Vector2 size, Boolean border) {
            return ImGuiInstanceContainer.singleton.BeginChild(id,size,border);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChild(UInt32 id, Vector2 size, Boolean border, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginChild(id,size,border,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChildFrame(UInt32 id, Vector2 size) {
            return ImGuiInstanceContainer.singleton.BeginChildFrame(id,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginChildFrame(UInt32 id, Vector2 size, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginChildFrame(id,size,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginCombo(String label, String preview_value) {
            return ImGuiInstanceContainer.singleton.BeginCombo(label,preview_value);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginCombo(String label, String preview_value, ImGuiComboFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginCombo(label,preview_value,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void BeginDisabled() {
            ImGuiInstanceContainer.singleton.BeginDisabled();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void BeginDisabled(Boolean disabled) {
            ImGuiInstanceContainer.singleton.BeginDisabled(disabled);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginDragDropSource() {
            return ImGuiInstanceContainer.singleton.BeginDragDropSource();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginDragDropSource(ImGuiDragDropFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginDragDropSource(flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginDragDropTarget() {
            return ImGuiInstanceContainer.singleton.BeginDragDropTarget();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void BeginGroup() {
            ImGuiInstanceContainer.singleton.BeginGroup();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginItemTooltip() {
            return ImGuiInstanceContainer.singleton.BeginItemTooltip();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginListBox(String label) {
            return ImGuiInstanceContainer.singleton.BeginListBox(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginListBox(String label, Vector2 size) {
            return ImGuiInstanceContainer.singleton.BeginListBox(label,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginMainMenuBar() {
            return ImGuiInstanceContainer.singleton.BeginMainMenuBar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginMenu(String label) {
            return ImGuiInstanceContainer.singleton.BeginMenu(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginMenu(String label, Boolean enabled) {
            return ImGuiInstanceContainer.singleton.BeginMenu(label,enabled);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginMenuBar() {
            return ImGuiInstanceContainer.singleton.BeginMenuBar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopup(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginPopup(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopup(String str_id, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginPopup(str_id,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextItem() {
            return ImGuiInstanceContainer.singleton.BeginPopupContextItem();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextItem(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextItem(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextItem(String str_id, ImGuiPopupFlags popup_flags) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextItem(str_id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextVoid() {
            return ImGuiInstanceContainer.singleton.BeginPopupContextVoid();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextVoid(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextVoid(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextVoid(String str_id, ImGuiPopupFlags popup_flags) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextVoid(str_id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextWindow() {
            return ImGuiInstanceContainer.singleton.BeginPopupContextWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextWindow(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextWindow(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupContextWindow(String str_id, ImGuiPopupFlags popup_flags) {
            return ImGuiInstanceContainer.singleton.BeginPopupContextWindow(str_id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupModal(String name) {
            return ImGuiInstanceContainer.singleton.BeginPopupModal(name);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupModal(String name, ref Boolean p_open) {
            return ImGuiInstanceContainer.singleton.BeginPopupModal(name,ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginPopupModal(String name, ref Boolean p_open, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginPopupModal(name,ref p_open,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTabBar(String str_id) {
            return ImGuiInstanceContainer.singleton.BeginTabBar(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTabBar(String str_id, ImGuiTabBarFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginTabBar(str_id,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTabItem(String label) {
            return ImGuiInstanceContainer.singleton.BeginTabItem(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTabItem(String label, ref Boolean p_open) {
            return ImGuiInstanceContainer.singleton.BeginTabItem(label,ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTabItem(String label, ref Boolean p_open, ImGuiTabItemFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginTabItem(label,ref p_open,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTable(String str_id, Int32 column) {
            return ImGuiInstanceContainer.singleton.BeginTable(str_id,column);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags) {
            return ImGuiInstanceContainer.singleton.BeginTable(str_id,column,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags, Vector2 outer_size) {
            return ImGuiInstanceContainer.singleton.BeginTable(str_id,column,flags,outer_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags, Vector2 outer_size, Single inner_width) {
            return ImGuiInstanceContainer.singleton.BeginTable(str_id,column,flags,outer_size,inner_width);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool BeginTooltip() {
            return ImGuiInstanceContainer.singleton.BeginTooltip();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Bullet() {
            ImGuiInstanceContainer.singleton.Bullet();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void BulletText(String fmt) {
            ImGuiInstanceContainer.singleton.BulletText(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Button(String label) {
            return ImGuiInstanceContainer.singleton.Button(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Button(String label, Vector2 size) {
            return ImGuiInstanceContainer.singleton.Button(label,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float CalcItemWidth() {
            return ImGuiInstanceContainer.singleton.CalcItemWidth();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Checkbox(String label, ref Boolean v) {
            return ImGuiInstanceContainer.singleton.Checkbox(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CheckboxFlags(String label, ref Int32 flags, Int32 flags_value) {
            return ImGuiInstanceContainer.singleton.CheckboxFlags(label,ref flags,flags_value);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CheckboxFlags(String label, ref UInt32 flags, UInt32 flags_value) {
            return ImGuiInstanceContainer.singleton.CheckboxFlags(label,ref flags,flags_value);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void CloseCurrentPopup() {
            ImGuiInstanceContainer.singleton.CloseCurrentPopup();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CollapsingHeader(String label) {
            return ImGuiInstanceContainer.singleton.CollapsingHeader(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CollapsingHeader(String label, ImGuiTreeNodeFlags flags) {
            return ImGuiInstanceContainer.singleton.CollapsingHeader(label,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CollapsingHeader(String label, ref Boolean p_visible) {
            return ImGuiInstanceContainer.singleton.CollapsingHeader(label,ref p_visible);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool CollapsingHeader(String label, ref Boolean p_visible, ImGuiTreeNodeFlags flags) {
            return ImGuiInstanceContainer.singleton.CollapsingHeader(label,ref p_visible,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorButton(String desc_id, Vector4 col) {
            return ImGuiInstanceContainer.singleton.ColorButton(desc_id,col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorButton(String desc_id, Vector4 col, ImGuiColorEditFlags flags) {
            return ImGuiInstanceContainer.singleton.ColorButton(desc_id,col,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorButton(String desc_id, Vector4 col, ImGuiColorEditFlags flags, Vector2 size) {
            return ImGuiInstanceContainer.singleton.ColorButton(desc_id,col,flags,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint ColorConvertFloat4ToU32(Vector4 @in) {
            return ImGuiInstanceContainer.singleton.ColorConvertFloat4ToU32(@in);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ColorConvertHSVtoRGB(Single h, Single s, Single v, out Single out_r, out Single out_g, out Single out_b) {
            ImGuiInstanceContainer.singleton.ColorConvertHSVtoRGB(h,s,v, out out_r, out out_g, out out_b);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ColorConvertRGBtoHSV(Single r, Single g, Single b, out Single out_h, out Single out_s, out Single out_v) {
            ImGuiInstanceContainer.singleton.ColorConvertRGBtoHSV(r,g,b, out out_h, out out_s, out out_v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector4 ColorConvertU32ToFloat4(UInt32 @in) {
            return ImGuiInstanceContainer.singleton.ColorConvertU32ToFloat4(@in);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorEdit3(String label, ref Vector3 col) {
            return ImGuiInstanceContainer.singleton.ColorEdit3(label,ref col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorEdit3(String label, ref Vector3 col, ImGuiColorEditFlags flags) {
            return ImGuiInstanceContainer.singleton.ColorEdit3(label,ref col,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorEdit4(String label, ref Vector4 col) {
            return ImGuiInstanceContainer.singleton.ColorEdit4(label,ref col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorEdit4(String label, ref Vector4 col, ImGuiColorEditFlags flags) {
            return ImGuiInstanceContainer.singleton.ColorEdit4(label,ref col,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorPicker3(String label, ref Vector3 col) {
            return ImGuiInstanceContainer.singleton.ColorPicker3(label,ref col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorPicker3(String label, ref Vector3 col, ImGuiColorEditFlags flags) {
            return ImGuiInstanceContainer.singleton.ColorPicker3(label,ref col,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorPicker4(String label, ref Vector4 col) {
            return ImGuiInstanceContainer.singleton.ColorPicker4(label,ref col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorPicker4(String label, ref Vector4 col, ImGuiColorEditFlags flags) {
            return ImGuiInstanceContainer.singleton.ColorPicker4(label,ref col,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ColorPicker4(String label, ref Vector4 col, ImGuiColorEditFlags flags, ref Single ref_col) {
            return ImGuiInstanceContainer.singleton.ColorPicker4(label,ref col,flags,ref ref_col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Columns() {
            ImGuiInstanceContainer.singleton.Columns();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Columns(Int32 count) {
            ImGuiInstanceContainer.singleton.Columns(count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Columns(Int32 count, String id) {
            ImGuiInstanceContainer.singleton.Columns(count,id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Columns(Int32 count, String id, Boolean border) {
            ImGuiInstanceContainer.singleton.Columns(count,id,border);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Combo(String label, ref Int32 current_item, String[] items, Int32 items_count) {
            return ImGuiInstanceContainer.singleton.Combo(label,ref current_item,items,items_count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Combo(String label, ref Int32 current_item, String[] items, Int32 items_count, Int32 popup_max_height_in_items) {
            return ImGuiInstanceContainer.singleton.Combo(label,ref current_item,items,items_count,popup_max_height_in_items);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Combo(String label, ref Int32 current_item, String items_separated_by_zeros) {
            return ImGuiInstanceContainer.singleton.Combo(label,ref current_item,items_separated_by_zeros);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Combo(String label, ref Int32 current_item, String items_separated_by_zeros, Int32 popup_max_height_in_items) {
            return ImGuiInstanceContainer.singleton.Combo(label,ref current_item,items_separated_by_zeros,popup_max_height_in_items);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DebugCheckVersionAndDataLayout(String version_str, UInt32 sz_io, UInt32 sz_style, UInt32 sz_vec2, UInt32 sz_vec4, UInt32 sz_drawvert, UInt32 sz_drawidx) {
            return ImGuiInstanceContainer.singleton.DebugCheckVersionAndDataLayout(version_str,sz_io,sz_style,sz_vec2,sz_vec4,sz_drawvert,sz_drawidx);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void DebugTextEncoding(String text) {
            ImGuiInstanceContainer.singleton.DebugTextEncoding(text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void DestroyContext() {
            ImGuiInstanceContainer.singleton.DestroyContext();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void DestroyPlatformWindows() {
            ImGuiInstanceContainer.singleton.DestroyPlatformWindows();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint DockSpace(UInt32 id) {
            return ImGuiInstanceContainer.singleton.DockSpace(id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint DockSpace(UInt32 id, Vector2 size) {
            return ImGuiInstanceContainer.singleton.DockSpace(id,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint DockSpace(UInt32 id, Vector2 size, ImGuiDockNodeFlags flags) {
            return ImGuiInstanceContainer.singleton.DockSpace(id,size,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint DockSpaceOverViewport() {
            return ImGuiInstanceContainer.singleton.DockSpaceOverViewport();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v, Single v_speed, Single v_min) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragFloat(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragFloat2(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragFloat3(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragFloat4(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format, String format_max) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format,format_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format, String format_max, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragFloatRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format,format_max,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragInt(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragInt2(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragInt3(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragInt4(label,ref v,v_speed,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format, String format_max) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format,format_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format, String format_max, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.DragIntRange2(label,ref v_current_min,ref v_current_max,v_speed,v_min,v_max,format,format_max,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Dummy(Vector2 size) {
            ImGuiInstanceContainer.singleton.Dummy(size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void End() {
            ImGuiInstanceContainer.singleton.End();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndChild() {
            ImGuiInstanceContainer.singleton.EndChild();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndChildFrame() {
            ImGuiInstanceContainer.singleton.EndChildFrame();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndCombo() {
            ImGuiInstanceContainer.singleton.EndCombo();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndDisabled() {
            ImGuiInstanceContainer.singleton.EndDisabled();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndDragDropSource() {
            ImGuiInstanceContainer.singleton.EndDragDropSource();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndDragDropTarget() {
            ImGuiInstanceContainer.singleton.EndDragDropTarget();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndFrame() {
            ImGuiInstanceContainer.singleton.EndFrame();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndGroup() {
            ImGuiInstanceContainer.singleton.EndGroup();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndListBox() {
            ImGuiInstanceContainer.singleton.EndListBox();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndMainMenuBar() {
            ImGuiInstanceContainer.singleton.EndMainMenuBar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndMenu() {
            ImGuiInstanceContainer.singleton.EndMenu();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndMenuBar() {
            ImGuiInstanceContainer.singleton.EndMenuBar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndPopup() {
            ImGuiInstanceContainer.singleton.EndPopup();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndTabBar() {
            ImGuiInstanceContainer.singleton.EndTabBar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndTabItem() {
            ImGuiInstanceContainer.singleton.EndTabItem();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndTable() {
            ImGuiInstanceContainer.singleton.EndTable();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void EndTooltip() {
            ImGuiInstanceContainer.singleton.EndTooltip();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string GetClipboardText() {
            return ImGuiInstanceContainer.singleton.GetClipboardText();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetColorU32(ImGuiCol idx) {
            return ImGuiInstanceContainer.singleton.GetColorU32(idx);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetColorU32(ImGuiCol idx, Single alpha_mul) {
            return ImGuiInstanceContainer.singleton.GetColorU32(idx,alpha_mul);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetColorU32(Vector4 col) {
            return ImGuiInstanceContainer.singleton.GetColorU32(col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetColorU32(UInt32 col) {
            return ImGuiInstanceContainer.singleton.GetColorU32(col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetColumnIndex() {
            return ImGuiInstanceContainer.singleton.GetColumnIndex();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetColumnOffset() {
            return ImGuiInstanceContainer.singleton.GetColumnOffset();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetColumnOffset(Int32 column_index) {
            return ImGuiInstanceContainer.singleton.GetColumnOffset(column_index);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetColumnsCount() {
            return ImGuiInstanceContainer.singleton.GetColumnsCount();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetColumnWidth() {
            return ImGuiInstanceContainer.singleton.GetColumnWidth();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetColumnWidth(Int32 column_index) {
            return ImGuiInstanceContainer.singleton.GetColumnWidth(column_index);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetContentRegionAvail() {
            return ImGuiInstanceContainer.singleton.GetContentRegionAvail();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetContentRegionMax() {
            return ImGuiInstanceContainer.singleton.GetContentRegionMax();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetCursorPos() {
            return ImGuiInstanceContainer.singleton.GetCursorPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetCursorPosX() {
            return ImGuiInstanceContainer.singleton.GetCursorPosX();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetCursorPosY() {
            return ImGuiInstanceContainer.singleton.GetCursorPosY();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetCursorScreenPos() {
            return ImGuiInstanceContainer.singleton.GetCursorScreenPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetCursorStartPos() {
            return ImGuiInstanceContainer.singleton.GetCursorStartPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetFontSize() {
            return ImGuiInstanceContainer.singleton.GetFontSize();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetFontTexUvWhitePixel() {
            return ImGuiInstanceContainer.singleton.GetFontTexUvWhitePixel();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetFrameCount() {
            return ImGuiInstanceContainer.singleton.GetFrameCount();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetFrameHeight() {
            return ImGuiInstanceContainer.singleton.GetFrameHeight();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetFrameHeightWithSpacing() {
            return ImGuiInstanceContainer.singleton.GetFrameHeightWithSpacing();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetID(String str_id) {
            return ImGuiInstanceContainer.singleton.GetID(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetItemID() {
            return ImGuiInstanceContainer.singleton.GetItemID();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetItemRectMax() {
            return ImGuiInstanceContainer.singleton.GetItemRectMax();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetItemRectMin() {
            return ImGuiInstanceContainer.singleton.GetItemRectMin();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetItemRectSize() {
            return ImGuiInstanceContainer.singleton.GetItemRectSize();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static ImGuiNET.ImGuiKey GetKeyIndex(ImGuiKey key) {
            return ImGuiInstanceContainer.singleton.GetKeyIndex(key);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string GetKeyName(ImGuiKey key) {
            return ImGuiInstanceContainer.singleton.GetKeyName(key);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetKeyPressedAmount(ImGuiKey key, Single repeat_delay, Single rate) {
            return ImGuiInstanceContainer.singleton.GetKeyPressedAmount(key,repeat_delay,rate);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetMouseClickedCount(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.GetMouseClickedCount(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static ImGuiNET.ImGuiMouseCursor GetMouseCursor() {
            return ImGuiInstanceContainer.singleton.GetMouseCursor();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetMouseDragDelta() {
            return ImGuiInstanceContainer.singleton.GetMouseDragDelta();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetMouseDragDelta(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.GetMouseDragDelta(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetMouseDragDelta(ImGuiMouseButton button, Single lock_threshold) {
            return ImGuiInstanceContainer.singleton.GetMouseDragDelta(button,lock_threshold);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetMousePos() {
            return ImGuiInstanceContainer.singleton.GetMousePos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetMousePosOnOpeningCurrentPopup() {
            return ImGuiInstanceContainer.singleton.GetMousePosOnOpeningCurrentPopup();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetScrollMaxX() {
            return ImGuiInstanceContainer.singleton.GetScrollMaxX();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetScrollMaxY() {
            return ImGuiInstanceContainer.singleton.GetScrollMaxY();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetScrollX() {
            return ImGuiInstanceContainer.singleton.GetScrollX();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetScrollY() {
            return ImGuiInstanceContainer.singleton.GetScrollY();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string GetStyleColorName(ImGuiCol idx) {
            return ImGuiInstanceContainer.singleton.GetStyleColorName(idx);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetTextLineHeight() {
            return ImGuiInstanceContainer.singleton.GetTextLineHeight();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetTextLineHeightWithSpacing() {
            return ImGuiInstanceContainer.singleton.GetTextLineHeightWithSpacing();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static double GetTime() {
            return ImGuiInstanceContainer.singleton.GetTime();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetTreeNodeToLabelSpacing() {
            return ImGuiInstanceContainer.singleton.GetTreeNodeToLabelSpacing();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string GetVersion() {
            return ImGuiInstanceContainer.singleton.GetVersion();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetWindowContentRegionMax() {
            return ImGuiInstanceContainer.singleton.GetWindowContentRegionMax();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetWindowContentRegionMin() {
            return ImGuiInstanceContainer.singleton.GetWindowContentRegionMin();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static uint GetWindowDockID() {
            return ImGuiInstanceContainer.singleton.GetWindowDockID();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetWindowDpiScale() {
            return ImGuiInstanceContainer.singleton.GetWindowDpiScale();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetWindowHeight() {
            return ImGuiInstanceContainer.singleton.GetWindowHeight();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetWindowPos() {
            return ImGuiInstanceContainer.singleton.GetWindowPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 GetWindowSize() {
            return ImGuiInstanceContainer.singleton.GetWindowSize();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static float GetWindowWidth() {
            return ImGuiInstanceContainer.singleton.GetWindowWidth();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Indent() {
            ImGuiInstanceContainer.singleton.Indent();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Indent(Single indent_w) {
            ImGuiInstanceContainer.singleton.Indent(indent_w);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputDouble(String label, ref Double v) {
            return ImGuiInstanceContainer.singleton.InputDouble(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputDouble(String label, ref Double v, Double step) {
            return ImGuiInstanceContainer.singleton.InputDouble(label,ref v,step);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputDouble(String label, ref Double v, Double step, Double step_fast) {
            return ImGuiInstanceContainer.singleton.InputDouble(label,ref v,step,step_fast);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputDouble(String label, ref Double v, Double step, Double step_fast, String format) {
            return ImGuiInstanceContainer.singleton.InputDouble(label,ref v,step,step_fast,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputDouble(String label, ref Double v, Double step, Double step_fast, String format, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputDouble(label,ref v,step,step_fast,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat(String label, ref Single v) {
            return ImGuiInstanceContainer.singleton.InputFloat(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat(String label, ref Single v, Single step) {
            return ImGuiInstanceContainer.singleton.InputFloat(label,ref v,step);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat(String label, ref Single v, Single step, Single step_fast) {
            return ImGuiInstanceContainer.singleton.InputFloat(label,ref v,step,step_fast);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat(String label, ref Single v, Single step, Single step_fast, String format) {
            return ImGuiInstanceContainer.singleton.InputFloat(label,ref v,step,step_fast,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat(String label, ref Single v, Single step, Single step_fast, String format, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputFloat(label,ref v,step,step_fast,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat2(String label, ref Vector2 v) {
            return ImGuiInstanceContainer.singleton.InputFloat2(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat2(String label, ref Vector2 v, String format) {
            return ImGuiInstanceContainer.singleton.InputFloat2(label,ref v,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat2(String label, ref Vector2 v, String format, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputFloat2(label,ref v,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat3(String label, ref Vector3 v) {
            return ImGuiInstanceContainer.singleton.InputFloat3(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat3(String label, ref Vector3 v, String format) {
            return ImGuiInstanceContainer.singleton.InputFloat3(label,ref v,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat3(String label, ref Vector3 v, String format, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputFloat3(label,ref v,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat4(String label, ref Vector4 v) {
            return ImGuiInstanceContainer.singleton.InputFloat4(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat4(String label, ref Vector4 v, String format) {
            return ImGuiInstanceContainer.singleton.InputFloat4(label,ref v,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputFloat4(String label, ref Vector4 v, String format, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputFloat4(label,ref v,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.InputInt(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt(String label, ref Int32 v, Int32 step) {
            return ImGuiInstanceContainer.singleton.InputInt(label,ref v,step);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt(String label, ref Int32 v, Int32 step, Int32 step_fast) {
            return ImGuiInstanceContainer.singleton.InputInt(label,ref v,step,step_fast);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt(String label, ref Int32 v, Int32 step, Int32 step_fast, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputInt(label,ref v,step,step_fast,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt2(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.InputInt2(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt2(String label, ref Int32 v, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputInt2(label,ref v,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt3(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.InputInt3(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt3(String label, ref Int32 v, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputInt3(label,ref v,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt4(String label, ref Int32 v) {
            return ImGuiInstanceContainer.singleton.InputInt4(label,ref v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputInt4(String label, ref Int32 v, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputInt4(label,ref v,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InvisibleButton(String str_id, Vector2 size) {
            return ImGuiInstanceContainer.singleton.InvisibleButton(str_id,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InvisibleButton(String str_id, Vector2 size, ImGuiButtonFlags flags) {
            return ImGuiInstanceContainer.singleton.InvisibleButton(str_id,size,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsAnyItemActive() {
            return ImGuiInstanceContainer.singleton.IsAnyItemActive();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsAnyItemFocused() {
            return ImGuiInstanceContainer.singleton.IsAnyItemFocused();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsAnyItemHovered() {
            return ImGuiInstanceContainer.singleton.IsAnyItemHovered();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsAnyMouseDown() {
            return ImGuiInstanceContainer.singleton.IsAnyMouseDown();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemActivated() {
            return ImGuiInstanceContainer.singleton.IsItemActivated();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemActive() {
            return ImGuiInstanceContainer.singleton.IsItemActive();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemClicked() {
            return ImGuiInstanceContainer.singleton.IsItemClicked();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemClicked(ImGuiMouseButton mouse_button) {
            return ImGuiInstanceContainer.singleton.IsItemClicked(mouse_button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemDeactivated() {
            return ImGuiInstanceContainer.singleton.IsItemDeactivated();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemDeactivatedAfterEdit() {
            return ImGuiInstanceContainer.singleton.IsItemDeactivatedAfterEdit();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemEdited() {
            return ImGuiInstanceContainer.singleton.IsItemEdited();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemFocused() {
            return ImGuiInstanceContainer.singleton.IsItemFocused();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemHovered() {
            return ImGuiInstanceContainer.singleton.IsItemHovered();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemHovered(ImGuiHoveredFlags flags) {
            return ImGuiInstanceContainer.singleton.IsItemHovered(flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemToggledOpen() {
            return ImGuiInstanceContainer.singleton.IsItemToggledOpen();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsItemVisible() {
            return ImGuiInstanceContainer.singleton.IsItemVisible();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsKeyDown(ImGuiKey key) {
            return ImGuiInstanceContainer.singleton.IsKeyDown(key);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsKeyPressed(ImGuiKey key) {
            return ImGuiInstanceContainer.singleton.IsKeyPressed(key);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsKeyPressed(ImGuiKey key, Boolean repeat) {
            return ImGuiInstanceContainer.singleton.IsKeyPressed(key,repeat);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsKeyReleased(ImGuiKey key) {
            return ImGuiInstanceContainer.singleton.IsKeyReleased(key);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseClicked(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.IsMouseClicked(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseClicked(ImGuiMouseButton button, Boolean repeat) {
            return ImGuiInstanceContainer.singleton.IsMouseClicked(button,repeat);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseDoubleClicked(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.IsMouseDoubleClicked(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseDown(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.IsMouseDown(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseDragging(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.IsMouseDragging(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseDragging(ImGuiMouseButton button, Single lock_threshold) {
            return ImGuiInstanceContainer.singleton.IsMouseDragging(button,lock_threshold);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseHoveringRect(Vector2 r_min, Vector2 r_max) {
            return ImGuiInstanceContainer.singleton.IsMouseHoveringRect(r_min,r_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseHoveringRect(Vector2 r_min, Vector2 r_max, Boolean clip) {
            return ImGuiInstanceContainer.singleton.IsMouseHoveringRect(r_min,r_max,clip);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMousePosValid() {
            return ImGuiInstanceContainer.singleton.IsMousePosValid();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMousePosValid(ref Vector2 mouse_pos) {
            return ImGuiInstanceContainer.singleton.IsMousePosValid(ref mouse_pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsMouseReleased(ImGuiMouseButton button) {
            return ImGuiInstanceContainer.singleton.IsMouseReleased(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsPopupOpen(String str_id) {
            return ImGuiInstanceContainer.singleton.IsPopupOpen(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsPopupOpen(String str_id, ImGuiPopupFlags flags) {
            return ImGuiInstanceContainer.singleton.IsPopupOpen(str_id,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsRectVisible(Vector2 size) {
            return ImGuiInstanceContainer.singleton.IsRectVisible(size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsRectVisible(Vector2 rect_min, Vector2 rect_max) {
            return ImGuiInstanceContainer.singleton.IsRectVisible(rect_min,rect_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowAppearing() {
            return ImGuiInstanceContainer.singleton.IsWindowAppearing();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowCollapsed() {
            return ImGuiInstanceContainer.singleton.IsWindowCollapsed();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowDocked() {
            return ImGuiInstanceContainer.singleton.IsWindowDocked();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowFocused() {
            return ImGuiInstanceContainer.singleton.IsWindowFocused();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowFocused(ImGuiFocusedFlags flags) {
            return ImGuiInstanceContainer.singleton.IsWindowFocused(flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowHovered() {
            return ImGuiInstanceContainer.singleton.IsWindowHovered();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool IsWindowHovered(ImGuiHoveredFlags flags) {
            return ImGuiInstanceContainer.singleton.IsWindowHovered(flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LabelText(String label, String fmt) {
            ImGuiInstanceContainer.singleton.LabelText(label,fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ListBox(String label, ref Int32 current_item, String[] items, Int32 items_count) {
            return ImGuiInstanceContainer.singleton.ListBox(label,ref current_item,items,items_count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ListBox(String label, ref Int32 current_item, String[] items, Int32 items_count, Int32 height_in_items) {
            return ImGuiInstanceContainer.singleton.ListBox(label,ref current_item,items,items_count,height_in_items);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LoadIniSettingsFromDisk(String ini_filename) {
            ImGuiInstanceContainer.singleton.LoadIniSettingsFromDisk(ini_filename);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LoadIniSettingsFromMemory(String ini_data) {
            ImGuiInstanceContainer.singleton.LoadIniSettingsFromMemory(ini_data);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LoadIniSettingsFromMemory(String ini_data, UInt32 ini_size) {
            ImGuiInstanceContainer.singleton.LoadIniSettingsFromMemory(ini_data,ini_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogButtons() {
            ImGuiInstanceContainer.singleton.LogButtons();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogFinish() {
            ImGuiInstanceContainer.singleton.LogFinish();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogText(String fmt) {
            ImGuiInstanceContainer.singleton.LogText(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToClipboard() {
            ImGuiInstanceContainer.singleton.LogToClipboard();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToClipboard(Int32 auto_open_depth) {
            ImGuiInstanceContainer.singleton.LogToClipboard(auto_open_depth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToFile() {
            ImGuiInstanceContainer.singleton.LogToFile();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToFile(Int32 auto_open_depth) {
            ImGuiInstanceContainer.singleton.LogToFile(auto_open_depth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToFile(Int32 auto_open_depth, String filename) {
            ImGuiInstanceContainer.singleton.LogToFile(auto_open_depth,filename);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToTTY() {
            ImGuiInstanceContainer.singleton.LogToTTY();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void LogToTTY(Int32 auto_open_depth) {
            ImGuiInstanceContainer.singleton.LogToTTY(auto_open_depth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label) {
            return ImGuiInstanceContainer.singleton.MenuItem(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, String shortcut) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,shortcut);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, String shortcut, Boolean selected) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,shortcut,selected);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, String shortcut, Boolean selected, Boolean enabled) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,shortcut,selected,enabled);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, String shortcut, ref Boolean p_selected) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,shortcut,ref p_selected);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, String shortcut, ref Boolean p_selected, Boolean enabled) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,shortcut,ref p_selected,enabled);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void NewFrame() {
            ImGuiInstanceContainer.singleton.NewFrame();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void NewLine() {
            ImGuiInstanceContainer.singleton.NewLine();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void NextColumn() {
            ImGuiInstanceContainer.singleton.NextColumn();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopup(String str_id) {
            ImGuiInstanceContainer.singleton.OpenPopup(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopup(String str_id, ImGuiPopupFlags popup_flags) {
            ImGuiInstanceContainer.singleton.OpenPopup(str_id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopup(UInt32 id) {
            ImGuiInstanceContainer.singleton.OpenPopup(id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopup(UInt32 id, ImGuiPopupFlags popup_flags) {
            ImGuiInstanceContainer.singleton.OpenPopup(id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopupOnItemClick() {
            ImGuiInstanceContainer.singleton.OpenPopupOnItemClick();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopupOnItemClick(String str_id) {
            ImGuiInstanceContainer.singleton.OpenPopupOnItemClick(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void OpenPopupOnItemClick(String str_id, ImGuiPopupFlags popup_flags) {
            ImGuiInstanceContainer.singleton.OpenPopupOnItemClick(str_id,popup_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset,overlay_text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset,overlay_text,scale_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max,graph_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size, Int32 stride) {
            ImGuiInstanceContainer.singleton.PlotHistogram(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max,graph_size,stride);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset,overlay_text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset,overlay_text,scale_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max,graph_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size, Int32 stride) {
            ImGuiInstanceContainer.singleton.PlotLines(label,ref values,values_count,values_offset,overlay_text,scale_min,scale_max,graph_size,stride);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopButtonRepeat() {
            ImGuiInstanceContainer.singleton.PopButtonRepeat();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopClipRect() {
            ImGuiInstanceContainer.singleton.PopClipRect();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopFont() {
            ImGuiInstanceContainer.singleton.PopFont();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopID() {
            ImGuiInstanceContainer.singleton.PopID();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopItemWidth() {
            ImGuiInstanceContainer.singleton.PopItemWidth();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopStyleColor() {
            ImGuiInstanceContainer.singleton.PopStyleColor();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopStyleColor(Int32 count) {
            ImGuiInstanceContainer.singleton.PopStyleColor(count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopStyleVar() {
            ImGuiInstanceContainer.singleton.PopStyleVar();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopStyleVar(Int32 count) {
            ImGuiInstanceContainer.singleton.PopStyleVar(count);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopTabStop() {
            ImGuiInstanceContainer.singleton.PopTabStop();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PopTextWrapPos() {
            ImGuiInstanceContainer.singleton.PopTextWrapPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ProgressBar(Single fraction) {
            ImGuiInstanceContainer.singleton.ProgressBar(fraction);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ProgressBar(Single fraction, Vector2 size_arg) {
            ImGuiInstanceContainer.singleton.ProgressBar(fraction,size_arg);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ProgressBar(Single fraction, Vector2 size_arg, String overlay) {
            ImGuiInstanceContainer.singleton.ProgressBar(fraction,size_arg,overlay);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushButtonRepeat(Boolean repeat) {
            ImGuiInstanceContainer.singleton.PushButtonRepeat(repeat);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushClipRect(Vector2 clip_rect_min, Vector2 clip_rect_max, Boolean intersect_with_current_clip_rect) {
            ImGuiInstanceContainer.singleton.PushClipRect(clip_rect_min,clip_rect_max,intersect_with_current_clip_rect);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushID(String str_id) {
            ImGuiInstanceContainer.singleton.PushID(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushID(Int32 int_id) {
            ImGuiInstanceContainer.singleton.PushID(int_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushItemWidth(Single item_width) {
            ImGuiInstanceContainer.singleton.PushItemWidth(item_width);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushStyleColor(ImGuiCol idx, UInt32 col) {
            ImGuiInstanceContainer.singleton.PushStyleColor(idx,col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushStyleColor(ImGuiCol idx, Vector4 col) {
            ImGuiInstanceContainer.singleton.PushStyleColor(idx,col);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushStyleVar(ImGuiStyleVar idx, Single val) {
            ImGuiInstanceContainer.singleton.PushStyleVar(idx,val);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushStyleVar(ImGuiStyleVar idx, Vector2 val) {
            ImGuiInstanceContainer.singleton.PushStyleVar(idx,val);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushTabStop(Boolean tab_stop) {
            ImGuiInstanceContainer.singleton.PushTabStop(tab_stop);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushTextWrapPos() {
            ImGuiInstanceContainer.singleton.PushTextWrapPos();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void PushTextWrapPos(Single wrap_local_pos_x) {
            ImGuiInstanceContainer.singleton.PushTextWrapPos(wrap_local_pos_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool RadioButton(String label, Boolean active) {
            return ImGuiInstanceContainer.singleton.RadioButton(label,active);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool RadioButton(String label, ref Int32 v, Int32 v_button) {
            return ImGuiInstanceContainer.singleton.RadioButton(label,ref v,v_button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Render() {
            ImGuiInstanceContainer.singleton.Render();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void RenderPlatformWindowsDefault() {
            ImGuiInstanceContainer.singleton.RenderPlatformWindowsDefault();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ResetMouseDragDelta() {
            ImGuiInstanceContainer.singleton.ResetMouseDragDelta();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ResetMouseDragDelta(ImGuiMouseButton button) {
            ImGuiInstanceContainer.singleton.ResetMouseDragDelta(button);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SameLine() {
            ImGuiInstanceContainer.singleton.SameLine();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SameLine(Single offset_from_start_x) {
            ImGuiInstanceContainer.singleton.SameLine(offset_from_start_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SameLine(Single offset_from_start_x, Single spacing) {
            ImGuiInstanceContainer.singleton.SameLine(offset_from_start_x,spacing);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SaveIniSettingsToDisk(String ini_filename) {
            ImGuiInstanceContainer.singleton.SaveIniSettingsToDisk(ini_filename);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string SaveIniSettingsToMemory() {
            return ImGuiInstanceContainer.singleton.SaveIniSettingsToMemory();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string SaveIniSettingsToMemory(out UInt32 out_ini_size) {
            return ImGuiInstanceContainer.singleton.SaveIniSettingsToMemory(out out_ini_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label) {
            return ImGuiInstanceContainer.singleton.Selectable(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, Boolean selected) {
            return ImGuiInstanceContainer.singleton.Selectable(label,selected);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, Boolean selected, ImGuiSelectableFlags flags) {
            return ImGuiInstanceContainer.singleton.Selectable(label,selected,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, Boolean selected, ImGuiSelectableFlags flags, Vector2 size) {
            return ImGuiInstanceContainer.singleton.Selectable(label,selected,flags,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, ref Boolean p_selected) {
            return ImGuiInstanceContainer.singleton.Selectable(label,ref p_selected);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, ref Boolean p_selected, ImGuiSelectableFlags flags) {
            return ImGuiInstanceContainer.singleton.Selectable(label,ref p_selected,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Selectable(String label, ref Boolean p_selected, ImGuiSelectableFlags flags, Vector2 size) {
            return ImGuiInstanceContainer.singleton.Selectable(label,ref p_selected,flags,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Separator() {
            ImGuiInstanceContainer.singleton.Separator();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SeparatorText(String label) {
            ImGuiInstanceContainer.singleton.SeparatorText(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetClipboardText(String text) {
            ImGuiInstanceContainer.singleton.SetClipboardText(text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetColorEditOptions(ImGuiColorEditFlags flags) {
            ImGuiInstanceContainer.singleton.SetColorEditOptions(flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetColumnOffset(Int32 column_index, Single offset_x) {
            ImGuiInstanceContainer.singleton.SetColumnOffset(column_index,offset_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetColumnWidth(Int32 column_index, Single width) {
            ImGuiInstanceContainer.singleton.SetColumnWidth(column_index,width);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetCursorPos(Vector2 local_pos) {
            ImGuiInstanceContainer.singleton.SetCursorPos(local_pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetCursorPosX(Single local_x) {
            ImGuiInstanceContainer.singleton.SetCursorPosX(local_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetCursorPosY(Single local_y) {
            ImGuiInstanceContainer.singleton.SetCursorPosY(local_y);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetCursorScreenPos(Vector2 pos) {
            ImGuiInstanceContainer.singleton.SetCursorScreenPos(pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetItemDefaultFocus() {
            ImGuiInstanceContainer.singleton.SetItemDefaultFocus();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetItemTooltip(String fmt) {
            ImGuiInstanceContainer.singleton.SetItemTooltip(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetKeyboardFocusHere() {
            ImGuiInstanceContainer.singleton.SetKeyboardFocusHere();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetKeyboardFocusHere(Int32 offset) {
            ImGuiInstanceContainer.singleton.SetKeyboardFocusHere(offset);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetMouseCursor(ImGuiMouseCursor cursor_type) {
            ImGuiInstanceContainer.singleton.SetMouseCursor(cursor_type);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextFrameWantCaptureKeyboard(Boolean want_capture_keyboard) {
            ImGuiInstanceContainer.singleton.SetNextFrameWantCaptureKeyboard(want_capture_keyboard);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextFrameWantCaptureMouse(Boolean want_capture_mouse) {
            ImGuiInstanceContainer.singleton.SetNextFrameWantCaptureMouse(want_capture_mouse);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextItemAllowOverlap() {
            ImGuiInstanceContainer.singleton.SetNextItemAllowOverlap();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextItemOpen(Boolean is_open) {
            ImGuiInstanceContainer.singleton.SetNextItemOpen(is_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextItemOpen(Boolean is_open, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetNextItemOpen(is_open,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextItemWidth(Single item_width) {
            ImGuiInstanceContainer.singleton.SetNextItemWidth(item_width);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowBgAlpha(Single alpha) {
            ImGuiInstanceContainer.singleton.SetNextWindowBgAlpha(alpha);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowCollapsed(Boolean collapsed) {
            ImGuiInstanceContainer.singleton.SetNextWindowCollapsed(collapsed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowCollapsed(Boolean collapsed, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetNextWindowCollapsed(collapsed,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowContentSize(Vector2 size) {
            ImGuiInstanceContainer.singleton.SetNextWindowContentSize(size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowDockID(UInt32 dock_id) {
            ImGuiInstanceContainer.singleton.SetNextWindowDockID(dock_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowDockID(UInt32 dock_id, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetNextWindowDockID(dock_id,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowFocus() {
            ImGuiInstanceContainer.singleton.SetNextWindowFocus();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowPos(Vector2 pos) {
            ImGuiInstanceContainer.singleton.SetNextWindowPos(pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowPos(Vector2 pos, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetNextWindowPos(pos,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowPos(Vector2 pos, ImGuiCond cond, Vector2 pivot) {
            ImGuiInstanceContainer.singleton.SetNextWindowPos(pos,cond,pivot);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowScroll(Vector2 scroll) {
            ImGuiInstanceContainer.singleton.SetNextWindowScroll(scroll);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowSize(Vector2 size) {
            ImGuiInstanceContainer.singleton.SetNextWindowSize(size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowSize(Vector2 size, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetNextWindowSize(size,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowSizeConstraints(Vector2 size_min, Vector2 size_max) {
            ImGuiInstanceContainer.singleton.SetNextWindowSizeConstraints(size_min,size_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetNextWindowViewport(UInt32 viewport_id) {
            ImGuiInstanceContainer.singleton.SetNextWindowViewport(viewport_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollFromPosX(Single local_x) {
            ImGuiInstanceContainer.singleton.SetScrollFromPosX(local_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollFromPosX(Single local_x, Single center_x_ratio) {
            ImGuiInstanceContainer.singleton.SetScrollFromPosX(local_x,center_x_ratio);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollFromPosY(Single local_y) {
            ImGuiInstanceContainer.singleton.SetScrollFromPosY(local_y);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollFromPosY(Single local_y, Single center_y_ratio) {
            ImGuiInstanceContainer.singleton.SetScrollFromPosY(local_y,center_y_ratio);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollHereX() {
            ImGuiInstanceContainer.singleton.SetScrollHereX();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollHereX(Single center_x_ratio) {
            ImGuiInstanceContainer.singleton.SetScrollHereX(center_x_ratio);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollHereY() {
            ImGuiInstanceContainer.singleton.SetScrollHereY();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollHereY(Single center_y_ratio) {
            ImGuiInstanceContainer.singleton.SetScrollHereY(center_y_ratio);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollX(Single scroll_x) {
            ImGuiInstanceContainer.singleton.SetScrollX(scroll_x);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetScrollY(Single scroll_y) {
            ImGuiInstanceContainer.singleton.SetScrollY(scroll_y);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetTabItemClosed(String tab_or_docked_window_label) {
            ImGuiInstanceContainer.singleton.SetTabItemClosed(tab_or_docked_window_label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetTooltip(String fmt) {
            ImGuiInstanceContainer.singleton.SetTooltip(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowCollapsed(Boolean collapsed) {
            ImGuiInstanceContainer.singleton.SetWindowCollapsed(collapsed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowCollapsed(Boolean collapsed, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowCollapsed(collapsed,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowCollapsed(String name, Boolean collapsed) {
            ImGuiInstanceContainer.singleton.SetWindowCollapsed(name,collapsed);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowCollapsed(String name, Boolean collapsed, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowCollapsed(name,collapsed,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowFocus() {
            ImGuiInstanceContainer.singleton.SetWindowFocus();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowFocus(String name) {
            ImGuiInstanceContainer.singleton.SetWindowFocus(name);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowFontScale(Single scale) {
            ImGuiInstanceContainer.singleton.SetWindowFontScale(scale);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowPos(Vector2 pos) {
            ImGuiInstanceContainer.singleton.SetWindowPos(pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowPos(Vector2 pos, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowPos(pos,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowPos(String name, Vector2 pos) {
            ImGuiInstanceContainer.singleton.SetWindowPos(name,pos);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowPos(String name, Vector2 pos, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowPos(name,pos,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowSize(Vector2 size) {
            ImGuiInstanceContainer.singleton.SetWindowSize(size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowSize(Vector2 size, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowSize(size,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowSize(String name, Vector2 size) {
            ImGuiInstanceContainer.singleton.SetWindowSize(name,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void SetWindowSize(String name, Vector2 size, ImGuiCond cond) {
            ImGuiInstanceContainer.singleton.SetWindowSize(name,size,cond);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowAboutWindow() {
            ImGuiInstanceContainer.singleton.ShowAboutWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowAboutWindow(ref Boolean p_open) {
            ImGuiInstanceContainer.singleton.ShowAboutWindow(ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowDebugLogWindow() {
            ImGuiInstanceContainer.singleton.ShowDebugLogWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowDebugLogWindow(ref Boolean p_open) {
            ImGuiInstanceContainer.singleton.ShowDebugLogWindow(ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowDemoWindow() {
            ImGuiInstanceContainer.singleton.ShowDemoWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowDemoWindow(ref Boolean p_open) {
            ImGuiInstanceContainer.singleton.ShowDemoWindow(ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowFontSelector(String label) {
            ImGuiInstanceContainer.singleton.ShowFontSelector(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowMetricsWindow() {
            ImGuiInstanceContainer.singleton.ShowMetricsWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowMetricsWindow(ref Boolean p_open) {
            ImGuiInstanceContainer.singleton.ShowMetricsWindow(ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowStackToolWindow() {
            ImGuiInstanceContainer.singleton.ShowStackToolWindow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowStackToolWindow(ref Boolean p_open) {
            ImGuiInstanceContainer.singleton.ShowStackToolWindow(ref p_open);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowStyleEditor() {
            ImGuiInstanceContainer.singleton.ShowStyleEditor();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool ShowStyleSelector(String label) {
            return ImGuiInstanceContainer.singleton.ShowStyleSelector(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void ShowUserGuide() {
            ImGuiInstanceContainer.singleton.ShowUserGuide();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderAngle(String label, ref Single v_rad) {
            return ImGuiInstanceContainer.singleton.SliderAngle(label,ref v_rad);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min) {
            return ImGuiInstanceContainer.singleton.SliderAngle(label,ref v_rad,v_degrees_min);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max) {
            return ImGuiInstanceContainer.singleton.SliderAngle(label,ref v_rad,v_degrees_min,v_degrees_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderAngle(label,ref v_rad,v_degrees_min,v_degrees_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderAngle(label,ref v_rad,v_degrees_min,v_degrees_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat(String label, ref Single v, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.SliderFloat(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat(String label, ref Single v, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderFloat(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat(String label, ref Single v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderFloat(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.SliderFloat2(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderFloat2(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderFloat2(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.SliderFloat3(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderFloat3(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderFloat3(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.SliderFloat4(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderFloat4(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderFloat4(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.SliderInt(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderInt(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderInt(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.SliderInt2(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderInt2(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderInt2(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.SliderInt3(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderInt3(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderInt3(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.SliderInt4(label,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.SliderInt4(label,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.SliderInt4(label,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool SmallButton(String label) {
            return ImGuiInstanceContainer.singleton.SmallButton(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Spacing() {
            ImGuiInstanceContainer.singleton.Spacing();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void StyleColorsClassic() {
            ImGuiInstanceContainer.singleton.StyleColorsClassic();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void StyleColorsDark() {
            ImGuiInstanceContainer.singleton.StyleColorsDark();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void StyleColorsLight() {
            ImGuiInstanceContainer.singleton.StyleColorsLight();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TabItemButton(String label) {
            return ImGuiInstanceContainer.singleton.TabItemButton(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TabItemButton(String label, ImGuiTabItemFlags flags) {
            return ImGuiInstanceContainer.singleton.TabItemButton(label,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int TableGetColumnCount() {
            return ImGuiInstanceContainer.singleton.TableGetColumnCount();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static ImGuiNET.ImGuiTableColumnFlags TableGetColumnFlags() {
            return ImGuiInstanceContainer.singleton.TableGetColumnFlags();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static ImGuiNET.ImGuiTableColumnFlags TableGetColumnFlags(Int32 column_n) {
            return ImGuiInstanceContainer.singleton.TableGetColumnFlags(column_n);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int TableGetColumnIndex() {
            return ImGuiInstanceContainer.singleton.TableGetColumnIndex();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string TableGetColumnName() {
            return ImGuiInstanceContainer.singleton.TableGetColumnName();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string TableGetColumnName(Int32 column_n) {
            return ImGuiInstanceContainer.singleton.TableGetColumnName(column_n);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int TableGetRowIndex() {
            return ImGuiInstanceContainer.singleton.TableGetRowIndex();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableHeader(String label) {
            ImGuiInstanceContainer.singleton.TableHeader(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableHeadersRow() {
            ImGuiInstanceContainer.singleton.TableHeadersRow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TableNextColumn() {
            return ImGuiInstanceContainer.singleton.TableNextColumn();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableNextRow() {
            ImGuiInstanceContainer.singleton.TableNextRow();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableNextRow(ImGuiTableRowFlags row_flags) {
            ImGuiInstanceContainer.singleton.TableNextRow(row_flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableNextRow(ImGuiTableRowFlags row_flags, Single min_row_height) {
            ImGuiInstanceContainer.singleton.TableNextRow(row_flags,min_row_height);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetBgColor(ImGuiTableBgTarget target, UInt32 color) {
            ImGuiInstanceContainer.singleton.TableSetBgColor(target,color);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetBgColor(ImGuiTableBgTarget target, UInt32 color, Int32 column_n) {
            ImGuiInstanceContainer.singleton.TableSetBgColor(target,color,column_n);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetColumnEnabled(Int32 column_n, Boolean v) {
            ImGuiInstanceContainer.singleton.TableSetColumnEnabled(column_n,v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TableSetColumnIndex(Int32 column_n) {
            return ImGuiInstanceContainer.singleton.TableSetColumnIndex(column_n);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetupColumn(String label) {
            ImGuiInstanceContainer.singleton.TableSetupColumn(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetupColumn(String label, ImGuiTableColumnFlags flags) {
            ImGuiInstanceContainer.singleton.TableSetupColumn(label,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetupColumn(String label, ImGuiTableColumnFlags flags, Single init_width_or_weight) {
            ImGuiInstanceContainer.singleton.TableSetupColumn(label,flags,init_width_or_weight);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetupColumn(String label, ImGuiTableColumnFlags flags, Single init_width_or_weight, UInt32 user_id) {
            ImGuiInstanceContainer.singleton.TableSetupColumn(label,flags,init_width_or_weight,user_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TableSetupScrollFreeze(Int32 cols, Int32 rows) {
            ImGuiInstanceContainer.singleton.TableSetupScrollFreeze(cols,rows);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Text(String fmt) {
            ImGuiInstanceContainer.singleton.Text(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TextColored(Vector4 col, String fmt) {
            ImGuiInstanceContainer.singleton.TextColored(col,fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TextDisabled(String fmt) {
            ImGuiInstanceContainer.singleton.TextDisabled(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TextUnformatted(String text) {
            ImGuiInstanceContainer.singleton.TextUnformatted(text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TextWrapped(String fmt) {
            ImGuiInstanceContainer.singleton.TextWrapped(fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TreeNode(String label) {
            return ImGuiInstanceContainer.singleton.TreeNode(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TreeNode(String str_id, String fmt) {
            return ImGuiInstanceContainer.singleton.TreeNode(str_id,fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TreeNodeEx(String label) {
            return ImGuiInstanceContainer.singleton.TreeNodeEx(label);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TreeNodeEx(String label, ImGuiTreeNodeFlags flags) {
            return ImGuiInstanceContainer.singleton.TreeNodeEx(label,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool TreeNodeEx(String str_id, ImGuiTreeNodeFlags flags, String fmt) {
            return ImGuiInstanceContainer.singleton.TreeNodeEx(str_id,flags,fmt);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TreePop() {
            ImGuiInstanceContainer.singleton.TreePop();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void TreePush(String str_id) {
            ImGuiInstanceContainer.singleton.TreePush(str_id);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Unindent() {
            ImGuiInstanceContainer.singleton.Unindent();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Unindent(Single indent_w) {
            ImGuiInstanceContainer.singleton.Unindent(indent_w);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void UpdatePlatformWindows() {
            ImGuiInstanceContainer.singleton.UpdatePlatformWindows();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Value(String prefix, Boolean b) {
            ImGuiInstanceContainer.singleton.Value(prefix,b);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Value(String prefix, Int32 v) {
            ImGuiInstanceContainer.singleton.Value(prefix,v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Value(String prefix, UInt32 v) {
            ImGuiInstanceContainer.singleton.Value(prefix,v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Value(String prefix, Single v) {
            ImGuiInstanceContainer.singleton.Value(prefix,v);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static void Value(String prefix, Single v, String float_format) {
            ImGuiInstanceContainer.singleton.Value(prefix,v,float_format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max) {
            return ImGuiInstanceContainer.singleton.VSliderFloat(label,size,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max, String format) {
            return ImGuiInstanceContainer.singleton.VSliderFloat(label,size,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.VSliderFloat(label,size,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max) {
            return ImGuiInstanceContainer.singleton.VSliderInt(label,size,ref v,v_min,v_max);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max, String format) {
            return ImGuiInstanceContainer.singleton.VSliderInt(label,size,ref v,v_min,v_max,format);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags) {
            return ImGuiInstanceContainer.singleton.VSliderInt(label,size,ref v,v_min,v_max,format,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputText(String label, Byte[] buf, UInt32 buf_size) {
            return ImGuiInstanceContainer.singleton.InputText(label,buf,buf_size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputText(String label, Byte[] buf, UInt32 buf_size, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputText(label,buf,buf_size,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputText(String label, ref String input, UInt32 maxLength) {
            return ImGuiInstanceContainer.singleton.InputText(label,ref input,maxLength);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputText(String label, ref String input, UInt32 maxLength, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputText(label,ref input,maxLength,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputTextMultiline(String label, ref String input, UInt32 maxLength, Vector2 size) {
            return ImGuiInstanceContainer.singleton.InputTextMultiline(label,ref input,maxLength,size);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputTextMultiline(String label, ref String input, UInt32 maxLength, Vector2 size, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputTextMultiline(label,ref input,maxLength,size,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputTextWithHint(String label, String hint, ref String input, UInt32 maxLength) {
            return ImGuiInstanceContainer.singleton.InputTextWithHint(label,hint,ref input,maxLength);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool InputTextWithHint(String label, String hint, ref String input, UInt32 maxLength, ImGuiInputTextFlags flags) {
            return ImGuiInstanceContainer.singleton.InputTextWithHint(label,hint,ref input,maxLength,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Single wrapWidth) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,wrapWidth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Boolean hideTextAfterDoubleHash) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,hideTextAfterDoubleHash);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,length);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Boolean hideTextAfterDoubleHash) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,hideTextAfterDoubleHash);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Single wrapWidth) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,wrapWidth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Boolean hideTextAfterDoubleHash, Single wrapWidth) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,hideTextAfterDoubleHash,wrapWidth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Boolean hideTextAfterDoubleHash) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,length,hideTextAfterDoubleHash);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Single wrapWidth) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,length,wrapWidth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Boolean hideTextAfterDoubleHash, Single wrapWidth) {
            return ImGuiInstanceContainer.singleton.CalcTextSize(text,start,length,hideTextAfterDoubleHash,wrapWidth);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Begin(String name, ImGuiWindowFlags flags) {
            return ImGuiInstanceContainer.singleton.Begin(name,flags);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool MenuItem(String label, Boolean enabled) {
            return ImGuiInstanceContainer.singleton.MenuItem(label,enabled);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static System.Type GetType() {
            return ImGuiInstanceContainer.singleton.GetType();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static string ToString() {
            return ImGuiInstanceContainer.singleton.ToString();
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static bool Equals(Object obj) {
            return ImGuiInstanceContainer.singleton.Equals(obj);
        }
        
        [System.Runtime.CompilerServices.MethodImplAttribute(MethodImplOptions.AggressiveInlining)]
        public static int GetHashCode() {
            return ImGuiInstanceContainer.singleton.GetHashCode();
        }
    }
}
