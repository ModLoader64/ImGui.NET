//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using ImGuiNET;
using System;
using System.Numerics;

namespace ModLoader.API {

    public static class ImGuiInstanceContainer
    {
        public static IImGuiContainer singleton { get; set; }
    }

    public interface IImGuiContainer {
        
        void AlignTextToFramePadding();
        
        bool ArrowButton(String str_id, ImGuiDir dir);
        
        bool Begin(String name);
        
        bool Begin(String name, ref Boolean p_open);
        
        bool Begin(String name, ref Boolean p_open, ImGuiWindowFlags flags);
        
        bool BeginChild(String str_id);
        
        bool BeginChild(String str_id, Vector2 size);
        
        bool BeginChild(String str_id, Vector2 size, Boolean border);
        
        bool BeginChild(String str_id, Vector2 size, Boolean border, ImGuiWindowFlags flags);
        
        bool BeginChild(UInt32 id);
        
        bool BeginChild(UInt32 id, Vector2 size);
        
        bool BeginChild(UInt32 id, Vector2 size, Boolean border);
        
        bool BeginChild(UInt32 id, Vector2 size, Boolean border, ImGuiWindowFlags flags);
        
        bool BeginChildFrame(UInt32 id, Vector2 size);
        
        bool BeginChildFrame(UInt32 id, Vector2 size, ImGuiWindowFlags flags);
        
        bool BeginCombo(String label, String preview_value);
        
        bool BeginCombo(String label, String preview_value, ImGuiComboFlags flags);
        
        void BeginDisabled();
        
        void BeginDisabled(Boolean disabled);
        
        bool BeginDragDropSource();
        
        bool BeginDragDropSource(ImGuiDragDropFlags flags);
        
        bool BeginDragDropTarget();
        
        void BeginGroup();
        
        bool BeginItemTooltip();
        
        bool BeginListBox(String label);
        
        bool BeginListBox(String label, Vector2 size);
        
        bool BeginMainMenuBar();
        
        bool BeginMenu(String label);
        
        bool BeginMenu(String label, Boolean enabled);
        
        bool BeginMenuBar();
        
        bool BeginPopup(String str_id);
        
        bool BeginPopup(String str_id, ImGuiWindowFlags flags);
        
        bool BeginPopupContextItem();
        
        bool BeginPopupContextItem(String str_id);
        
        bool BeginPopupContextItem(String str_id, ImGuiPopupFlags popup_flags);
        
        bool BeginPopupContextVoid();
        
        bool BeginPopupContextVoid(String str_id);
        
        bool BeginPopupContextVoid(String str_id, ImGuiPopupFlags popup_flags);
        
        bool BeginPopupContextWindow();
        
        bool BeginPopupContextWindow(String str_id);
        
        bool BeginPopupContextWindow(String str_id, ImGuiPopupFlags popup_flags);
        
        bool BeginPopupModal(String name);
        
        bool BeginPopupModal(String name, ref Boolean p_open);
        
        bool BeginPopupModal(String name, ref Boolean p_open, ImGuiWindowFlags flags);
        
        bool BeginTabBar(String str_id);
        
        bool BeginTabBar(String str_id, ImGuiTabBarFlags flags);
        
        bool BeginTabItem(String label);
        
        bool BeginTabItem(String label, ref Boolean p_open);
        
        bool BeginTabItem(String label, ref Boolean p_open, ImGuiTabItemFlags flags);
        
        bool BeginTable(String str_id, Int32 column);
        
        bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags);
        
        bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags, Vector2 outer_size);
        
        bool BeginTable(String str_id, Int32 column, ImGuiTableFlags flags, Vector2 outer_size, Single inner_width);
        
        bool BeginTooltip();
        
        void Bullet();
        
        void BulletText(String fmt);
        
        bool Button(String label);
        
        bool Button(String label, Vector2 size);
        
        float CalcItemWidth();
        
        bool Checkbox(String label, ref Boolean v);
        
        bool CheckboxFlags(String label, ref Int32 flags, Int32 flags_value);
        
        bool CheckboxFlags(String label, ref UInt32 flags, UInt32 flags_value);
        
        void CloseCurrentPopup();
        
        bool CollapsingHeader(String label);
        
        bool CollapsingHeader(String label, ImGuiTreeNodeFlags flags);
        
        bool CollapsingHeader(String label, ref Boolean p_visible);
        
        bool CollapsingHeader(String label, ref Boolean p_visible, ImGuiTreeNodeFlags flags);
        
        bool ColorButton(String desc_id, Vector4 col);
        
        bool ColorButton(String desc_id, Vector4 col, ImGuiColorEditFlags flags);
        
        bool ColorButton(String desc_id, Vector4 col, ImGuiColorEditFlags flags, Vector2 size);
        
        uint ColorConvertFloat4ToU32(Vector4 @in);
        
        void ColorConvertHSVtoRGB(Single h, Single s, Single v, out Single out_r, out Single out_g, out Single out_b);
        
        void ColorConvertRGBtoHSV(Single r, Single g, Single b, out Single out_h, out Single out_s, out Single out_v);
        
        System.Numerics.Vector4 ColorConvertU32ToFloat4(UInt32 @in);
        
        bool ColorEdit3(String label, ref Vector3 col);
        
        bool ColorEdit3(String label, ref Vector3 col, ImGuiColorEditFlags flags);
        
        bool ColorEdit4(String label, ref Vector4 col);
        
        bool ColorEdit4(String label, ref Vector4 col, ImGuiColorEditFlags flags);
        
        bool ColorPicker3(String label, ref Vector3 col);
        
        bool ColorPicker3(String label, ref Vector3 col, ImGuiColorEditFlags flags);
        
        bool ColorPicker4(String label, ref Vector4 col);
        
        bool ColorPicker4(String label, ref Vector4 col, ImGuiColorEditFlags flags);
        
        bool ColorPicker4(String label, ref Vector4 col, ImGuiColorEditFlags flags, ref Single ref_col);
        
        void Columns();
        
        void Columns(Int32 count);
        
        void Columns(Int32 count, String id);
        
        void Columns(Int32 count, String id, Boolean border);
        
        bool Combo(String label, ref Int32 current_item, String[] items, Int32 items_count);
        
        bool Combo(String label, ref Int32 current_item, String[] items, Int32 items_count, Int32 popup_max_height_in_items);
        
        bool Combo(String label, ref Int32 current_item, String items_separated_by_zeros);
        
        bool Combo(String label, ref Int32 current_item, String items_separated_by_zeros, Int32 popup_max_height_in_items);
        
        bool DebugCheckVersionAndDataLayout(String version_str, UInt32 sz_io, UInt32 sz_style, UInt32 sz_vec2, UInt32 sz_vec4, UInt32 sz_drawvert, UInt32 sz_drawidx);
        
        void DebugTextEncoding(String text);
        
        void DestroyContext();
        
        void DestroyPlatformWindows();
        
        uint DockSpace(UInt32 id);
        
        uint DockSpace(UInt32 id, Vector2 size);
        
        uint DockSpace(UInt32 id, Vector2 size, ImGuiDockNodeFlags flags);
        
        uint DockSpaceOverViewport();
        
        bool DragFloat(String label, ref Single v);
        
        bool DragFloat(String label, ref Single v, Single v_speed);
        
        bool DragFloat(String label, ref Single v, Single v_speed, Single v_min);
        
        bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max);
        
        bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max, String format);
        
        bool DragFloat(String label, ref Single v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool DragFloat2(String label, ref Vector2 v);
        
        bool DragFloat2(String label, ref Vector2 v, Single v_speed);
        
        bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min);
        
        bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max);
        
        bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max, String format);
        
        bool DragFloat2(String label, ref Vector2 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool DragFloat3(String label, ref Vector3 v);
        
        bool DragFloat3(String label, ref Vector3 v, Single v_speed);
        
        bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min);
        
        bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max);
        
        bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max, String format);
        
        bool DragFloat3(String label, ref Vector3 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool DragFloat4(String label, ref Vector4 v);
        
        bool DragFloat4(String label, ref Vector4 v, Single v_speed);
        
        bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min);
        
        bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max);
        
        bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max, String format);
        
        bool DragFloat4(String label, ref Vector4 v, Single v_speed, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format, String format_max);
        
        bool DragFloatRange2(String label, ref Single v_current_min, ref Single v_current_max, Single v_speed, Single v_min, Single v_max, String format, String format_max, ImGuiSliderFlags flags);
        
        bool DragInt(String label, ref Int32 v);
        
        bool DragInt(String label, ref Int32 v, Single v_speed);
        
        bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min);
        
        bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max);
        
        bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format);
        
        bool DragInt(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool DragInt2(String label, ref Int32 v);
        
        bool DragInt2(String label, ref Int32 v, Single v_speed);
        
        bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min);
        
        bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max);
        
        bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format);
        
        bool DragInt2(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool DragInt3(String label, ref Int32 v);
        
        bool DragInt3(String label, ref Int32 v, Single v_speed);
        
        bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min);
        
        bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max);
        
        bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format);
        
        bool DragInt3(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool DragInt4(String label, ref Int32 v);
        
        bool DragInt4(String label, ref Int32 v, Single v_speed);
        
        bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min);
        
        bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max);
        
        bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format);
        
        bool DragInt4(String label, ref Int32 v, Single v_speed, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format, String format_max);
        
        bool DragIntRange2(String label, ref Int32 v_current_min, ref Int32 v_current_max, Single v_speed, Int32 v_min, Int32 v_max, String format, String format_max, ImGuiSliderFlags flags);
        
        void Dummy(Vector2 size);
        
        void End();
        
        void EndChild();
        
        void EndChildFrame();
        
        void EndCombo();
        
        void EndDisabled();
        
        void EndDragDropSource();
        
        void EndDragDropTarget();
        
        void EndFrame();
        
        void EndGroup();
        
        void EndListBox();
        
        void EndMainMenuBar();
        
        void EndMenu();
        
        void EndMenuBar();
        
        void EndPopup();
        
        void EndTabBar();
        
        void EndTabItem();
        
        void EndTable();
        
        void EndTooltip();
        
        string GetClipboardText();
        
        uint GetColorU32(ImGuiCol idx);
        
        uint GetColorU32(ImGuiCol idx, Single alpha_mul);
        
        uint GetColorU32(Vector4 col);
        
        uint GetColorU32(UInt32 col);
        
        int GetColumnIndex();
        
        float GetColumnOffset();
        
        float GetColumnOffset(Int32 column_index);
        
        int GetColumnsCount();
        
        float GetColumnWidth();
        
        float GetColumnWidth(Int32 column_index);
        
        System.Numerics.Vector2 GetContentRegionAvail();
        
        System.Numerics.Vector2 GetContentRegionMax();
        
        System.Numerics.Vector2 GetCursorPos();
        
        float GetCursorPosX();
        
        float GetCursorPosY();
        
        System.Numerics.Vector2 GetCursorScreenPos();
        
        System.Numerics.Vector2 GetCursorStartPos();
        
        float GetFontSize();
        
        System.Numerics.Vector2 GetFontTexUvWhitePixel();
        
        int GetFrameCount();
        
        float GetFrameHeight();
        
        float GetFrameHeightWithSpacing();
        
        uint GetID(String str_id);
        
        uint GetItemID();
        
        System.Numerics.Vector2 GetItemRectMax();
        
        System.Numerics.Vector2 GetItemRectMin();
        
        System.Numerics.Vector2 GetItemRectSize();
        
        ImGuiNET.ImGuiKey GetKeyIndex(ImGuiKey key);
        
        string GetKeyName(ImGuiKey key);
        
        int GetKeyPressedAmount(ImGuiKey key, Single repeat_delay, Single rate);
        
        int GetMouseClickedCount(ImGuiMouseButton button);
        
        ImGuiNET.ImGuiMouseCursor GetMouseCursor();
        
        System.Numerics.Vector2 GetMouseDragDelta();
        
        System.Numerics.Vector2 GetMouseDragDelta(ImGuiMouseButton button);
        
        System.Numerics.Vector2 GetMouseDragDelta(ImGuiMouseButton button, Single lock_threshold);
        
        System.Numerics.Vector2 GetMousePos();
        
        System.Numerics.Vector2 GetMousePosOnOpeningCurrentPopup();
        
        float GetScrollMaxX();
        
        float GetScrollMaxY();
        
        float GetScrollX();
        
        float GetScrollY();
        
        string GetStyleColorName(ImGuiCol idx);
        
        float GetTextLineHeight();
        
        float GetTextLineHeightWithSpacing();
        
        double GetTime();
        
        float GetTreeNodeToLabelSpacing();
        
        string GetVersion();
        
        System.Numerics.Vector2 GetWindowContentRegionMax();
        
        System.Numerics.Vector2 GetWindowContentRegionMin();
        
        uint GetWindowDockID();
        
        float GetWindowDpiScale();
        
        float GetWindowHeight();
        
        System.Numerics.Vector2 GetWindowPos();
        
        System.Numerics.Vector2 GetWindowSize();
        
        float GetWindowWidth();
        
        void Indent();
        
        void Indent(Single indent_w);
        
        bool InputDouble(String label, ref Double v);
        
        bool InputDouble(String label, ref Double v, Double step);
        
        bool InputDouble(String label, ref Double v, Double step, Double step_fast);
        
        bool InputDouble(String label, ref Double v, Double step, Double step_fast, String format);
        
        bool InputDouble(String label, ref Double v, Double step, Double step_fast, String format, ImGuiInputTextFlags flags);
        
        bool InputFloat(String label, ref Single v);
        
        bool InputFloat(String label, ref Single v, Single step);
        
        bool InputFloat(String label, ref Single v, Single step, Single step_fast);
        
        bool InputFloat(String label, ref Single v, Single step, Single step_fast, String format);
        
        bool InputFloat(String label, ref Single v, Single step, Single step_fast, String format, ImGuiInputTextFlags flags);
        
        bool InputFloat2(String label, ref Vector2 v);
        
        bool InputFloat2(String label, ref Vector2 v, String format);
        
        bool InputFloat2(String label, ref Vector2 v, String format, ImGuiInputTextFlags flags);
        
        bool InputFloat3(String label, ref Vector3 v);
        
        bool InputFloat3(String label, ref Vector3 v, String format);
        
        bool InputFloat3(String label, ref Vector3 v, String format, ImGuiInputTextFlags flags);
        
        bool InputFloat4(String label, ref Vector4 v);
        
        bool InputFloat4(String label, ref Vector4 v, String format);
        
        bool InputFloat4(String label, ref Vector4 v, String format, ImGuiInputTextFlags flags);
        
        bool InputInt(String label, ref Int32 v);
        
        bool InputInt(String label, ref Int32 v, Int32 step);
        
        bool InputInt(String label, ref Int32 v, Int32 step, Int32 step_fast);
        
        bool InputInt(String label, ref Int32 v, Int32 step, Int32 step_fast, ImGuiInputTextFlags flags);
        
        bool InputInt2(String label, ref Int32 v);
        
        bool InputInt2(String label, ref Int32 v, ImGuiInputTextFlags flags);
        
        bool InputInt3(String label, ref Int32 v);
        
        bool InputInt3(String label, ref Int32 v, ImGuiInputTextFlags flags);
        
        bool InputInt4(String label, ref Int32 v);
        
        bool InputInt4(String label, ref Int32 v, ImGuiInputTextFlags flags);
        
        bool InvisibleButton(String str_id, Vector2 size);
        
        bool InvisibleButton(String str_id, Vector2 size, ImGuiButtonFlags flags);
        
        bool IsAnyItemActive();
        
        bool IsAnyItemFocused();
        
        bool IsAnyItemHovered();
        
        bool IsAnyMouseDown();
        
        bool IsItemActivated();
        
        bool IsItemActive();
        
        bool IsItemClicked();
        
        bool IsItemClicked(ImGuiMouseButton mouse_button);
        
        bool IsItemDeactivated();
        
        bool IsItemDeactivatedAfterEdit();
        
        bool IsItemEdited();
        
        bool IsItemFocused();
        
        bool IsItemHovered();
        
        bool IsItemHovered(ImGuiHoveredFlags flags);
        
        bool IsItemToggledOpen();
        
        bool IsItemVisible();
        
        bool IsKeyDown(ImGuiKey key);
        
        bool IsKeyPressed(ImGuiKey key);
        
        bool IsKeyPressed(ImGuiKey key, Boolean repeat);
        
        bool IsKeyReleased(ImGuiKey key);
        
        bool IsMouseClicked(ImGuiMouseButton button);
        
        bool IsMouseClicked(ImGuiMouseButton button, Boolean repeat);
        
        bool IsMouseDoubleClicked(ImGuiMouseButton button);
        
        bool IsMouseDown(ImGuiMouseButton button);
        
        bool IsMouseDragging(ImGuiMouseButton button);
        
        bool IsMouseDragging(ImGuiMouseButton button, Single lock_threshold);
        
        bool IsMouseHoveringRect(Vector2 r_min, Vector2 r_max);
        
        bool IsMouseHoveringRect(Vector2 r_min, Vector2 r_max, Boolean clip);
        
        bool IsMousePosValid();
        
        bool IsMousePosValid(ref Vector2 mouse_pos);
        
        bool IsMouseReleased(ImGuiMouseButton button);
        
        bool IsPopupOpen(String str_id);
        
        bool IsPopupOpen(String str_id, ImGuiPopupFlags flags);
        
        bool IsRectVisible(Vector2 size);
        
        bool IsRectVisible(Vector2 rect_min, Vector2 rect_max);
        
        bool IsWindowAppearing();
        
        bool IsWindowCollapsed();
        
        bool IsWindowDocked();
        
        bool IsWindowFocused();
        
        bool IsWindowFocused(ImGuiFocusedFlags flags);
        
        bool IsWindowHovered();
        
        bool IsWindowHovered(ImGuiHoveredFlags flags);
        
        void LabelText(String label, String fmt);
        
        bool ListBox(String label, ref Int32 current_item, String[] items, Int32 items_count);
        
        bool ListBox(String label, ref Int32 current_item, String[] items, Int32 items_count, Int32 height_in_items);
        
        void LoadIniSettingsFromDisk(String ini_filename);
        
        void LoadIniSettingsFromMemory(String ini_data);
        
        void LoadIniSettingsFromMemory(String ini_data, UInt32 ini_size);
        
        void LogButtons();
        
        void LogFinish();
        
        void LogText(String fmt);
        
        void LogToClipboard();
        
        void LogToClipboard(Int32 auto_open_depth);
        
        void LogToFile();
        
        void LogToFile(Int32 auto_open_depth);
        
        void LogToFile(Int32 auto_open_depth, String filename);
        
        void LogToTTY();
        
        void LogToTTY(Int32 auto_open_depth);
        
        bool MenuItem(String label);
        
        bool MenuItem(String label, String shortcut);
        
        bool MenuItem(String label, String shortcut, Boolean selected);
        
        bool MenuItem(String label, String shortcut, Boolean selected, Boolean enabled);
        
        bool MenuItem(String label, String shortcut, ref Boolean p_selected);
        
        bool MenuItem(String label, String shortcut, ref Boolean p_selected, Boolean enabled);
        
        void NewFrame();
        
        void NewLine();
        
        void NextColumn();
        
        void OpenPopup(String str_id);
        
        void OpenPopup(String str_id, ImGuiPopupFlags popup_flags);
        
        void OpenPopup(UInt32 id);
        
        void OpenPopup(UInt32 id, ImGuiPopupFlags popup_flags);
        
        void OpenPopupOnItemClick();
        
        void OpenPopupOnItemClick(String str_id);
        
        void OpenPopupOnItemClick(String str_id, ImGuiPopupFlags popup_flags);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size);
        
        void PlotHistogram(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size, Int32 stride);
        
        void PlotLines(String label, ref Single values, Int32 values_count);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size);
        
        void PlotLines(String label, ref Single values, Int32 values_count, Int32 values_offset, String overlay_text, Single scale_min, Single scale_max, Vector2 graph_size, Int32 stride);
        
        void PopButtonRepeat();
        
        void PopClipRect();
        
        void PopFont();
        
        void PopID();
        
        void PopItemWidth();
        
        void PopStyleColor();
        
        void PopStyleColor(Int32 count);
        
        void PopStyleVar();
        
        void PopStyleVar(Int32 count);
        
        void PopTabStop();
        
        void PopTextWrapPos();
        
        void ProgressBar(Single fraction);
        
        void ProgressBar(Single fraction, Vector2 size_arg);
        
        void ProgressBar(Single fraction, Vector2 size_arg, String overlay);
        
        void PushButtonRepeat(Boolean repeat);
        
        void PushClipRect(Vector2 clip_rect_min, Vector2 clip_rect_max, Boolean intersect_with_current_clip_rect);
        
        void PushID(String str_id);
        
        void PushID(Int32 int_id);
        
        void PushItemWidth(Single item_width);
        
        void PushStyleColor(ImGuiCol idx, UInt32 col);
        
        void PushStyleColor(ImGuiCol idx, Vector4 col);
        
        void PushStyleVar(ImGuiStyleVar idx, Single val);
        
        void PushStyleVar(ImGuiStyleVar idx, Vector2 val);
        
        void PushTabStop(Boolean tab_stop);
        
        void PushTextWrapPos();
        
        void PushTextWrapPos(Single wrap_local_pos_x);
        
        bool RadioButton(String label, Boolean active);
        
        bool RadioButton(String label, ref Int32 v, Int32 v_button);
        
        void Render();
        
        void RenderPlatformWindowsDefault();
        
        void ResetMouseDragDelta();
        
        void ResetMouseDragDelta(ImGuiMouseButton button);
        
        void SameLine();
        
        void SameLine(Single offset_from_start_x);
        
        void SameLine(Single offset_from_start_x, Single spacing);
        
        void SaveIniSettingsToDisk(String ini_filename);
        
        string SaveIniSettingsToMemory();
        
        string SaveIniSettingsToMemory(out UInt32 out_ini_size);
        
        bool Selectable(String label);
        
        bool Selectable(String label, Boolean selected);
        
        bool Selectable(String label, Boolean selected, ImGuiSelectableFlags flags);
        
        bool Selectable(String label, Boolean selected, ImGuiSelectableFlags flags, Vector2 size);
        
        bool Selectable(String label, ref Boolean p_selected);
        
        bool Selectable(String label, ref Boolean p_selected, ImGuiSelectableFlags flags);
        
        bool Selectable(String label, ref Boolean p_selected, ImGuiSelectableFlags flags, Vector2 size);
        
        void Separator();
        
        void SeparatorText(String label);
        
        void SetClipboardText(String text);
        
        void SetColorEditOptions(ImGuiColorEditFlags flags);
        
        void SetColumnOffset(Int32 column_index, Single offset_x);
        
        void SetColumnWidth(Int32 column_index, Single width);
        
        void SetCursorPos(Vector2 local_pos);
        
        void SetCursorPosX(Single local_x);
        
        void SetCursorPosY(Single local_y);
        
        void SetCursorScreenPos(Vector2 pos);
        
        void SetItemDefaultFocus();
        
        void SetItemTooltip(String fmt);
        
        void SetKeyboardFocusHere();
        
        void SetKeyboardFocusHere(Int32 offset);
        
        void SetMouseCursor(ImGuiMouseCursor cursor_type);
        
        void SetNextFrameWantCaptureKeyboard(Boolean want_capture_keyboard);
        
        void SetNextFrameWantCaptureMouse(Boolean want_capture_mouse);
        
        void SetNextItemAllowOverlap();
        
        void SetNextItemOpen(Boolean is_open);
        
        void SetNextItemOpen(Boolean is_open, ImGuiCond cond);
        
        void SetNextItemWidth(Single item_width);
        
        void SetNextWindowBgAlpha(Single alpha);
        
        void SetNextWindowCollapsed(Boolean collapsed);
        
        void SetNextWindowCollapsed(Boolean collapsed, ImGuiCond cond);
        
        void SetNextWindowContentSize(Vector2 size);
        
        void SetNextWindowDockID(UInt32 dock_id);
        
        void SetNextWindowDockID(UInt32 dock_id, ImGuiCond cond);
        
        void SetNextWindowFocus();
        
        void SetNextWindowPos(Vector2 pos);
        
        void SetNextWindowPos(Vector2 pos, ImGuiCond cond);
        
        void SetNextWindowPos(Vector2 pos, ImGuiCond cond, Vector2 pivot);
        
        void SetNextWindowScroll(Vector2 scroll);
        
        void SetNextWindowSize(Vector2 size);
        
        void SetNextWindowSize(Vector2 size, ImGuiCond cond);
        
        void SetNextWindowSizeConstraints(Vector2 size_min, Vector2 size_max);
        
        void SetNextWindowViewport(UInt32 viewport_id);
        
        void SetScrollFromPosX(Single local_x);
        
        void SetScrollFromPosX(Single local_x, Single center_x_ratio);
        
        void SetScrollFromPosY(Single local_y);
        
        void SetScrollFromPosY(Single local_y, Single center_y_ratio);
        
        void SetScrollHereX();
        
        void SetScrollHereX(Single center_x_ratio);
        
        void SetScrollHereY();
        
        void SetScrollHereY(Single center_y_ratio);
        
        void SetScrollX(Single scroll_x);
        
        void SetScrollY(Single scroll_y);
        
        void SetTabItemClosed(String tab_or_docked_window_label);
        
        void SetTooltip(String fmt);
        
        void SetWindowCollapsed(Boolean collapsed);
        
        void SetWindowCollapsed(Boolean collapsed, ImGuiCond cond);
        
        void SetWindowCollapsed(String name, Boolean collapsed);
        
        void SetWindowCollapsed(String name, Boolean collapsed, ImGuiCond cond);
        
        void SetWindowFocus();
        
        void SetWindowFocus(String name);
        
        void SetWindowFontScale(Single scale);
        
        void SetWindowPos(Vector2 pos);
        
        void SetWindowPos(Vector2 pos, ImGuiCond cond);
        
        void SetWindowPos(String name, Vector2 pos);
        
        void SetWindowPos(String name, Vector2 pos, ImGuiCond cond);
        
        void SetWindowSize(Vector2 size);
        
        void SetWindowSize(Vector2 size, ImGuiCond cond);
        
        void SetWindowSize(String name, Vector2 size);
        
        void SetWindowSize(String name, Vector2 size, ImGuiCond cond);
        
        void ShowAboutWindow();
        
        void ShowAboutWindow(ref Boolean p_open);
        
        void ShowDebugLogWindow();
        
        void ShowDebugLogWindow(ref Boolean p_open);
        
        void ShowDemoWindow();
        
        void ShowDemoWindow(ref Boolean p_open);
        
        void ShowFontSelector(String label);
        
        void ShowMetricsWindow();
        
        void ShowMetricsWindow(ref Boolean p_open);
        
        void ShowStackToolWindow();
        
        void ShowStackToolWindow(ref Boolean p_open);
        
        void ShowStyleEditor();
        
        bool ShowStyleSelector(String label);
        
        void ShowUserGuide();
        
        bool SliderAngle(String label, ref Single v_rad);
        
        bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min);
        
        bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max);
        
        bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max, String format);
        
        bool SliderAngle(String label, ref Single v_rad, Single v_degrees_min, Single v_degrees_max, String format, ImGuiSliderFlags flags);
        
        bool SliderFloat(String label, ref Single v, Single v_min, Single v_max);
        
        bool SliderFloat(String label, ref Single v, Single v_min, Single v_max, String format);
        
        bool SliderFloat(String label, ref Single v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max);
        
        bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max, String format);
        
        bool SliderFloat2(String label, ref Vector2 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max);
        
        bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max, String format);
        
        bool SliderFloat3(String label, ref Vector3 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max);
        
        bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max, String format);
        
        bool SliderFloat4(String label, ref Vector4 v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max);
        
        bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format);
        
        bool SliderInt(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max);
        
        bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format);
        
        bool SliderInt2(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max);
        
        bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format);
        
        bool SliderInt3(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max);
        
        bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format);
        
        bool SliderInt4(String label, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool SmallButton(String label);
        
        void Spacing();
        
        void StyleColorsClassic();
        
        void StyleColorsDark();
        
        void StyleColorsLight();
        
        bool TabItemButton(String label);
        
        bool TabItemButton(String label, ImGuiTabItemFlags flags);
        
        int TableGetColumnCount();
        
        ImGuiNET.ImGuiTableColumnFlags TableGetColumnFlags();
        
        ImGuiNET.ImGuiTableColumnFlags TableGetColumnFlags(Int32 column_n);
        
        int TableGetColumnIndex();
        
        string TableGetColumnName();
        
        string TableGetColumnName(Int32 column_n);
        
        int TableGetRowIndex();
        
        void TableHeader(String label);
        
        void TableHeadersRow();
        
        bool TableNextColumn();
        
        void TableNextRow();
        
        void TableNextRow(ImGuiTableRowFlags row_flags);
        
        void TableNextRow(ImGuiTableRowFlags row_flags, Single min_row_height);
        
        void TableSetBgColor(ImGuiTableBgTarget target, UInt32 color);
        
        void TableSetBgColor(ImGuiTableBgTarget target, UInt32 color, Int32 column_n);
        
        void TableSetColumnEnabled(Int32 column_n, Boolean v);
        
        bool TableSetColumnIndex(Int32 column_n);
        
        void TableSetupColumn(String label);
        
        void TableSetupColumn(String label, ImGuiTableColumnFlags flags);
        
        void TableSetupColumn(String label, ImGuiTableColumnFlags flags, Single init_width_or_weight);
        
        void TableSetupColumn(String label, ImGuiTableColumnFlags flags, Single init_width_or_weight, UInt32 user_id);
        
        void TableSetupScrollFreeze(Int32 cols, Int32 rows);
        
        void Text(String fmt);
        
        void TextColored(Vector4 col, String fmt);
        
        void TextDisabled(String fmt);
        
        void TextUnformatted(String text);
        
        void TextWrapped(String fmt);
        
        bool TreeNode(String label);
        
        bool TreeNode(String str_id, String fmt);
        
        bool TreeNodeEx(String label);
        
        bool TreeNodeEx(String label, ImGuiTreeNodeFlags flags);
        
        bool TreeNodeEx(String str_id, ImGuiTreeNodeFlags flags, String fmt);
        
        void TreePop();
        
        void TreePush(String str_id);
        
        void Unindent();
        
        void Unindent(Single indent_w);
        
        void UpdatePlatformWindows();
        
        void Value(String prefix, Boolean b);
        
        void Value(String prefix, Int32 v);
        
        void Value(String prefix, UInt32 v);
        
        void Value(String prefix, Single v);
        
        void Value(String prefix, Single v, String float_format);
        
        bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max);
        
        bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max, String format);
        
        bool VSliderFloat(String label, Vector2 size, ref Single v, Single v_min, Single v_max, String format, ImGuiSliderFlags flags);
        
        bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max);
        
        bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max, String format);
        
        bool VSliderInt(String label, Vector2 size, ref Int32 v, Int32 v_min, Int32 v_max, String format, ImGuiSliderFlags flags);
        
        bool InputText(String label, Byte[] buf, UInt32 buf_size);
        
        bool InputText(String label, Byte[] buf, UInt32 buf_size, ImGuiInputTextFlags flags);
        
        bool InputText(String label, ref String input, UInt32 maxLength);
        
        bool InputText(String label, ref String input, UInt32 maxLength, ImGuiInputTextFlags flags);
        
        bool InputTextMultiline(String label, ref String input, UInt32 maxLength, Vector2 size);
        
        bool InputTextMultiline(String label, ref String input, UInt32 maxLength, Vector2 size, ImGuiInputTextFlags flags);
        
        bool InputTextWithHint(String label, String hint, ref String input, UInt32 maxLength);
        
        bool InputTextWithHint(String label, String hint, ref String input, UInt32 maxLength, ImGuiInputTextFlags flags);
        
        System.Numerics.Vector2 CalcTextSize(String text);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start);
        
        System.Numerics.Vector2 CalcTextSize(String text, Single wrapWidth);
        
        System.Numerics.Vector2 CalcTextSize(String text, Boolean hideTextAfterDoubleHash);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Boolean hideTextAfterDoubleHash);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Single wrapWidth);
        
        System.Numerics.Vector2 CalcTextSize(String text, Boolean hideTextAfterDoubleHash, Single wrapWidth);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Boolean hideTextAfterDoubleHash);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Single wrapWidth);
        
        System.Numerics.Vector2 CalcTextSize(String text, Int32 start, Int32 length, Boolean hideTextAfterDoubleHash, Single wrapWidth);
        
        bool Begin(String name, ImGuiWindowFlags flags);
        
        bool MenuItem(String label, Boolean enabled);
    }
}
